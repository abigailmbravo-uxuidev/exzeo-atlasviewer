{"id":"context/layer-context.js","dependencies":[{"name":"/srv/atlas/atlas-web/package.json","includedInParent":true,"mtime":1589460883313},{"name":"react","loc":{"line":1,"column":72},"parent":"/srv/atlas/atlas-web/src/context/layer-context.js","resolved":"/srv/atlas/atlas-web/node_modules/react/index.js"},{"name":"./user-context","loc":{"line":2,"column":24},"parent":"/srv/atlas/atlas-web/src/context/layer-context.js","resolved":"/srv/atlas/atlas-web/src/context/user-context.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLayerState = exports.useLayerDispatch = exports.LayerProvider = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _userContext = require(\"./user-context\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst LayerStateContext = (0, _react.createContext)();\nconst LayerDispatchContext = (0, _react.createContext)();\n\nconst layerReducer = (layers, action) => {\n  switch (action.type) {\n    case 'initial':\n      {\n        return action.data;\n      }\n\n    case 'add':\n      {\n        return [...layers, action.data];\n      }\n\n    case 'update':\n      {\n        return layers.map(l => {\n          if (l._id === action.data._id) {\n            return { ...l,\n              ...action.data\n            };\n          }\n\n          return l;\n        });\n      }\n\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n};\n\nconst LayerProvider = ({\n  children\n}) => {\n  const {\n    layers\n  } = (0, _userContext.useUser)();\n  const [state, dispatch] = (0, _react.useReducer)(layerReducer);\n  (0, _react.useEffect)(() => {\n    if (layers && layers.length > 0) {\n      dispatch({\n        type: 'initial',\n        data: layers\n      });\n    }\n  }, [layers]);\n  return (\n    /*#__PURE__*/\n    _react.default.createElement(LayerStateContext.Provider, {\n      value: state\n    },\n    /*#__PURE__*/\n    _react.default.createElement(LayerDispatchContext.Provider, {\n      value: dispatch\n    }, children))\n  );\n};\n\nexports.LayerProvider = LayerProvider;\n\nconst useLayerDispatch = () => {\n  const context = _react.default.useContext(LayerDispatchContext);\n\n  if (context === undefined) {//throw new Error(`useLayerDispatch must be used within a LayerProvider`);\n  }\n\n  return context;\n};\n\nexports.useLayerDispatch = useLayerDispatch;\n\nconst useLayerState = () => {\n  const context = (0, _react.useContext)(LayerStateContext);\n\n  if (context === undefined) {//throw new Error(`useLayerState must be used within a LayerProvider`);\n  }\n\n  return context;\n};\n\nexports.useLayerState = useLayerState;"},"sourceMaps":null,"error":null,"hash":"4613c630a4dab1e2690342caece15c3e","cacheData":{"env":{}}}