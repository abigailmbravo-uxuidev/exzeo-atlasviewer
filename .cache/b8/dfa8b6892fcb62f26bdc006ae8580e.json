{"id":"components/map.js","dependencies":[{"name":"/srv/atlas/atlas-web/package.json","includedInParent":true,"mtime":1589460883313},{"name":"react","loc":{"line":1,"column":68},"parent":"/srv/atlas/atlas-web/src/components/map.js","resolved":"/srv/atlas/atlas-web/node_modules/react/index.js"},{"name":"prop-types","loc":{"line":2,"column":22},"parent":"/srv/atlas/atlas-web/src/components/map.js","resolved":"/srv/atlas/atlas-web/node_modules/prop-types/index.js"},{"name":"mapbox-gl","loc":{"line":3,"column":21},"parent":"/srv/atlas/atlas-web/src/components/map.js","resolved":"/srv/atlas/atlas-web/node_modules/mapbox-gl/dist/mapbox-gl.js"},{"name":"../context/user-context","loc":{"line":4,"column":24},"parent":"/srv/atlas/atlas-web/src/components/map.js","resolved":"/srv/atlas/atlas-web/src/context/user-context.js"},{"name":"../context/layer-context","loc":{"line":5,"column":30},"parent":"/srv/atlas/atlas-web/src/components/map.js","resolved":"/srv/atlas/atlas-web/src/context/layer-context.js"},{"name":"./map.utils.js","loc":{"line":6,"column":53},"parent":"/srv/atlas/atlas-web/src/components/map.js","resolved":"/srv/atlas/atlas-web/src/components/map.utils.js"},{"name":"../utils/utils","loc":{"line":7,"column":28},"parent":"/srv/atlas/atlas-web/src/components/map.js","resolved":"/srv/atlas/atlas-web/src/utils/utils.js"},{"name":"mapbox-gl/dist/mapbox-gl.css","loc":{"line":8,"column":7},"parent":"/srv/atlas/atlas-web/src/components/map.js","resolved":"/srv/atlas/atlas-web/node_modules/mapbox-gl/dist/mapbox-gl.css"},{"name":"@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css","loc":{"line":9,"column":7},"parent":"/srv/atlas/atlas-web/src/components/map.js","resolved":"/srv/atlas/atlas-web/node_modules/@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _mapboxGl = _interopRequireDefault(require(\"mapbox-gl\"));\n\nvar _userContext = require(\"../context/user-context\");\n\nvar _layerContext = require(\"../context/layer-context\");\n\nvar _mapUtils = require(\"./map.utils.js\");\n\nvar _utils = require(\"../utils/utils\");\n\nrequire(\"mapbox-gl/dist/mapbox-gl.css\");\n\nrequire(\"@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst Map = () => {\n  const layers = (0, _layerContext.useLayerState)();\n  const user = (0, _userContext.useUser)();\n  const [map, setMap] = (0, _react.useState)();\n  const mapContainer = (0, _react.useRef)(null);\n  const prevLayers = (0, _utils.usePrevious)(layers);\n  const userId = user.user_id;\n  (0, _react.useLayoutEffect)(() => {\n    const initializeMap = (setMap, mapContainer) => {\n      const mapbox = new _mapboxGl.default.Map({\n        container: mapContainer.current,\n        ..._mapUtils.defaultConfig\n      });\n      (0, _mapUtils.addControls)(mapbox);\n      mapbox.on('load', () => {\n        setMap(mapbox);\n        mapbox.resize();\n      });\n    };\n\n    initializeMap(setMap, mapContainer);\n  }, [setMap]);\n  (0, _react.useEffect)(() => {\n    if (!layers || !prevLayers) return;\n\n    if (layers.length > prevLayers.length) {\n      // Add layer\n      (0, _mapUtils.addLayer)(map, userId, layers[layers.length - 1]);\n    } else if (prevLayers.length > layers.length) {// Delete layer\n    } else {\n      // Toggle layer\n      layers.map(layer => {\n        if (layer.active !== prevLayers.active) {\n          if (!map.getLayer(layer._id)) {\n            return (0, _mapUtils.addLayer)(map, userId, layer);\n          }\n\n          const visibility = map.getLayoutProperty(layer._id, 'visibility');\n          const newVisibility = layer.active ? 'visible' : 'none';\n          map.setLayoutProperty(layer._id, 'visibility', newVisibility);\n        }\n      });\n    }\n  }, [prevLayers, layers, userId, map]);\n\n  if (map) {\n    // handle clicks on features\n    map.on('click', e => {\n      const features = map.queryRenderedFeatures(e.point);\n    });\n  }\n\n  return (\n    /*#__PURE__*/\n    _react.default.createElement(\"div\", {\n      id: \"map\",\n      ref: el => mapContainer.current = el\n    })\n  );\n};\n\nMap.propTypes = {\n  setMap: _propTypes.default.func\n};\nvar _default = Map;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"855d67e3c4dddb98de757b23a76858d6","cacheData":{"env":{}}}