{"id":"components/uploader.js","dependencies":[{"name":"/srv/atlas/atlas-web/package.json","includedInParent":true,"mtime":1589460883313},{"name":"react","loc":{"line":1,"column":43},"parent":"/srv/atlas/atlas-web/src/components/uploader.js","resolved":"/srv/atlas/atlas-web/node_modules/react/index.js"},{"name":"react-hook-form","loc":{"line":2,"column":24},"parent":"/srv/atlas/atlas-web/src/components/uploader.js","resolved":"/srv/atlas/atlas-web/node_modules/react-hook-form/dist/react-hook-form.es.js"},{"name":"papaparse","loc":{"line":3,"column":17},"parent":"/srv/atlas/atlas-web/src/components/uploader.js","resolved":"/srv/atlas/atlas-web/node_modules/papaparse/papaparse.min.js"},{"name":"axios","loc":{"line":4,"column":18},"parent":"/srv/atlas/atlas-web/src/components/uploader.js","resolved":"/srv/atlas/atlas-web/node_modules/axios/index.js"},{"name":"../context/layer-context","loc":{"line":5,"column":33},"parent":"/srv/atlas/atlas-web/src/components/uploader.js","resolved":"/srv/atlas/atlas-web/src/context/layer-context.js"},{"name":"../context/user-context","loc":{"line":6,"column":24},"parent":"/srv/atlas/atlas-web/src/components/uploader.js","resolved":"/srv/atlas/atlas-web/src/context/user-context.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactHookForm = require(\"react-hook-form\");\n\nvar _papaparse = _interopRequireDefault(require(\"papaparse\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _layerContext = require(\"../context/layer-context\");\n\nvar _userContext = require(\"../context/user-context\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst Uploader = ({\n  setUploaderState\n}) => {\n  const dispatch = (0, _layerContext.useLayerDispatch)();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    formState\n  } = (0, _reactHookForm.useForm)();\n  const user = (0, _userContext.useUser)();\n  const [file, setFile] = (0, _react.useState)({});\n  const [headers, setHeaders] = (0, _react.useState)(null);\n  const [layerData, setLayerData] = (0, _react.useState)();\n  const [geoJson, setGeoJson] = (0, _react.useState)();\n\n  const handleFile = ({\n    target: {\n      files\n    }\n  }) => {\n    setFile(files[0]);\n  };\n\n  const geoFile = {\n    type: 'FeatureCollection',\n    features: []\n  };\n\n  const csvTojson = (row, parser) => {\n    const lat = row.data.lat || row.data.latitude;\n    const lon = row.data.lon || row.data.long || row.data.longitude;\n    const feature = {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [lon, lat]\n      },\n      properties: { ...row.data\n      }\n    };\n    if (!headers) setHeaders(row.meta.fields);\n    geoFile.features.push(feature);\n  };\n\n  const handleUpload = async data => {\n    const url = `${\"http://localhost:8787/api\"}/upload`;\n    const userData = {\n      userId: user.user_id,\n      first_name: user.first_name,\n      last_name: user.last_name\n    };\n    const formData = new FormData();\n    formData.append('name', data.feedname);\n    formData.append('userData', JSON.stringify(userData));\n    formData.append('file', file);\n    const reqOptions = {\n      url,\n      method: 'POST',\n      data: formData,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    const res = await (0, _axios.default)(reqOptions).catch(err => console.log(err));\n    const layer = res.data.data;\n    dispatch({\n      type: 'add',\n      data: layer\n    });\n    setUploaderState(false);\n  };\n\n  const processFile = e => {\n    if (!file) return;\n\n    _papaparse.default.parse(file, {\n      header: true,\n      dynamicTyping: true,\n      skipEmptyLines: 'greedy',\n      step: csvTojson,\n      complete: addLayer,\n      error: err => console.log(err)\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    _react.default.createElement(\"div\", {\n      className: \"modal .fade-in\"\n    },\n    /*#__PURE__*/\n    _react.default.createElement(\"form\", {\n      onSubmit: handleSubmit(handleUpload)\n    },\n    /*#__PURE__*/\n    _react.default.createElement(\"input\", {\n      id: \"feed\",\n      name: \"feed\",\n      type: \"file\",\n      accept: \"text/csv\",\n      ref: register,\n      onChange: handleFile\n    }),\n    /*#__PURE__*/\n    _react.default.createElement(\"input\", {\n      type: \"text\",\n      id: \"feed-name\",\n      name: \"feedname\",\n      ref: register({\n        required: true\n      }),\n      defaultValue: file.name\n    }), errors.lastname && 'Feed Name is required.',\n    /*#__PURE__*/\n    _react.default.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => setUploaderState(false)\n    }, \"Cancel\"),\n    /*#__PURE__*/\n    _react.default.createElement(\"button\", {\n      type: \"submit\",\n      enabled: String(formState.dirty)\n    }, \"Upload\")))\n  );\n};\n\nvar _default = Uploader;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"4340995a29db9ed9014de15b1e07df15","cacheData":{"env":{"API_URL":"http://localhost:8787/api"}}}